// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
}


model User {
  id           String   @id @default(uuid())
  firstName    String
  lastName     String
  fullName     String
  username     String   @unique @default(cuid())
  email        String   @unique
  phoneNumber  String
  password     String
  nationality  String
  dateOfBirth  DateTime
  gender       Gender
  role         Role
  address      String
  image        String?
  info         String?
  memberInfo   MemberInfo?
  privateSessionsAsCoach   PrivateSession[] @relation("CoachSessions")
  privateSessionsAsMember  PrivateSession[] @relation("MemberSessions")
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  ADMIN
  COACH
  MEMBER
}

model MemberInfo {
  userId            String   @id @unique
  user              User     @relation(fields: [userId], references: [id])
  height           Float
  weight           Float
  plan             String
  startDate        DateTime
  endDate          DateTime
  status          SubscriptionStatus
  subscriptionCost Float
  info            String?
}

enum SubscriptionStatus {
  ACTIVE
  UNACTIVE
  EXPIRED
  CANCELLED
}

model PrivateSession {
  id                String   @id @default(uuid())
  coachId           String
  memberId          String
  startSessionDate  DateTime
  sessionsNumber    Int

  coach   User @relation("CoachSessions", fields: [coachId], references: [id])
  member  User @relation("MemberSessions", fields: [memberId], references: [id])
}
